
<head>
    <meta charset="UTF-8" />
    <title>Smart Cart - FoodExpress</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        .quantity-btn {
            width: 2.5rem;
            height: 2.5rem;
        }

        .card-body{
            width: 100%;
            text-align: center;
            align-items: center;
            padding-left: 10%;
            margin -left: 10%;
        }

        .cart-item {
            transition: all 0.2s ease-in-out;
            border-left: 5px solid #0d6efd;
            border-radius: 0.5rem;
            box-shadow: 0 0.125rem 0.5rem rgba(0, 0, 0, 0.05);
        }

            .cart-item:hover {
                box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.08);
            }   





        .cart-summary {
            position: sticky;
            bottom: 0;
            background: #fff;
            border-top: 1px solid #ccc;
            padding: 1rem;
        }
    </style>
</head>
<body class="bg-light d-flex flex-column min-vh-100">

    <div class="container my-4">
        <h2 class="mb-4">🛒 Your Cart</h2>

        <!-- Cart Item -->
        <div class="card mb-3">
            <div class="card-body d-flex justify-content-between align-items-center flex-wrap">
                @* <div class="row" id="menuItems">
                    <!-- Food cards will be injected here Dynamically -->
                </div>
                <div class="d-flex align-items-center gap-2">
                    <button class="btn btn-outline-secondary quantity-btn" onclick="updateQuantity(-1)">−</button>
                    <span id="qty">2</span>
                    <button class="btn btn-outline-secondary quantity-btn" onclick="updateQuantity(1)">+</button>
                    <a href="#" class="btn btn-sm btn-outline-primary ms-3">Edit</a>
                </div> *@
                <div id="cartContainer" class="row"></div>

            </div>
        </div>

        <!-- Recommended Dish Placeholder -->
        <div class="my-4">
            <h5>🍽️ Recommended for You</h5>
            <div class="text-muted fst-italic">Coming soon: spicy suggestions tailored to your taste...</div>
        </div>

        <!-- Coupon Buttons -->
        <div class="mb-4">
            <h5>🎁 Apply Coupon</h5>
            <div class="btn-group" role="group" id="couponButtons">
                <button class="btn btn-outline-success" onclick="applyCoupon(0.5, this)">50% OFF</button>
                <button class="btn btn-outline-danger" onclick="applyCoupon(0.9, this)">90% OFF</button>
                <button class="btn btn-outline-dark" onclick="applyCoupon(0, this)">Clear Coupon</button>
            </div>
        </div>


        <!-- Distance Input -->
        <div class="mb-4">
            <label for="distanceInput" class="form-label">Distance (in km):</label>
            <input type="number" id="distanceInput" class="form-control" value="17" min="0" onchange="calculateTotal()" />
        </div>

        <!-- Summary -->
        <div class="cart-summary d-flex justify-content-between align-items-center">
            <h5>Total: ₹<span id="finalTotal">0</span></h5>
            <div class="d-flex flex-wrap gap-2">
                <a href="https://localhost:7225/Restaurent" class="btn btn-outline-primary">Modify Selection</a>
                <button class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#cancelModal">Cancel Order</button>
                <button data-bs-toggle="modal" data-bs-target="#breakdownModal">View Breakdown</button>
                
                <a class="btn btn-success" asp-area="" asp-controller="Payment" asp-action="payment">Checkout</a>

            </div>
        </div>
    </div>

    <!-- price breakdown  Modal -->
    <div class="modal fade" id="breakdownModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-slideout">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Price Breakdown</h5>
                    <button class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <dl class="row">
                        <dt class="col-sm-6">Items Price</dt>
                        <dd class="col-sm-6" id="itemPrice">₹0</dd>

                        <dt class="col-sm-6">Discount</dt>
                        <dd class="col-sm-6" id="discount">− ₹0</dd>

                        <dt class="col-sm-6">Delivery Fee</dt>
                        <dd class="col-sm-6" id="deliveryFee">₹0</dd>

                        <dt class="col-sm-6 fw-bold">Total</dt>
                        <dd class="col-sm-6 fw-bold" id="totalPrice">₹0</dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>
    <!--Cancel Modal-->
    <div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-danger shadow">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="cancelLabel">Cancel Your Order?</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body text-center">
                    <p class="mb-3">Are you sure you want to cancel everything? All items in your cart will be removed.</p>
                    <button class="btn btn-danger px-4 me-2" onclick="confirmCancel()">Yes, Cancel</button>
                    <button class="btn btn-outline-secondary px-4" data-bs-dismiss="modal">No, Keep My Order</button>
                </div>
            </div>
        </div>
    </div>


    <!-- JavaScript -->

    <script src="~/js/cartManager.js"></script>

    <script>
                let couponRate = 0;

        // Load and render the cart items
        function renderCart() {
          const cart = getCart();
          const container = document.getElementById("cartContainer");
          container.innerHTML = "";

          if (Object.keys(cart).length === 0) {
            container.innerHTML = `<p class="text-muted">Your cart is empty.</p>`;
            renderTotals();
            return;
          }


          for (const id in cart) {
            const item = foodLookup[id];
            const qty = cart[id];
            const subtotal = item.price * qty;

            const card = document.createElement("div");
            card.className = "card mb-3 cart-item";
            card.innerHTML = `
          <div class="card-body">
            <div class="d-flex justify-content-between">
              <div>
                <h5 class="mb-1">${item.name}</h5>
                <p class="mb-1">₹${item.price} × ${qty} = ₹${subtotal}</p>
              </div>
              <div class="d-flex gap-2 align-items-center">
                <button class="btn btn-outline-success btn-sm" onclick="updateCart(${id}, 1)">+</button>
                <button class="btn btn-outline-warning btn-sm" onclick="updateCart(${id}, -1)">−</button>
                <button class="btn btn-outline-danger btn-sm" onclick="removeItem(${id})">Remove</button>
              </div>
            </div>
          </div>`;

            container.appendChild(card);
          }

          renderTotals();
        }

        // Update quantity
        function updateCart(id, delta) {
          const cart = getCart();
          cart[id] = Math.max(0, (cart[id] || 0) + delta);

          if (cart[id] === 0) {
            delete cart[id];
          }

          saveCart(cart);
          renderCart();
        }

        // Remove item completely
        function removeItem(id) {
          const cart = getCart();
          delete cart[id];
          saveCart(cart);
          renderCart();
        }

        // Apply coupon and visually toggle
        function applyCoupon(rate, button) {
          couponRate = rate;
          document.querySelectorAll("#couponButtons button").forEach(btn => btn.classList.remove("active"));
          button.classList.add("active");
          renderTotals();
        }

        // Render pricing summary
        function renderTotals() {
          const distance = parseFloat(document.getElementById("distanceInput").value) || 0;
          const cart = getCart();
          const totals = calculateTotals(cart, couponRate, distance);

          document.getElementById("finalTotal").innerText = totals.final.toFixed(2);
          document.getElementById("itemPrice").innerText = `₹${totals.itemTotal.toFixed(2)}`;
          document.getElementById("discount").innerText = `− ₹${totals.discount.toFixed(2)}`;
          document.getElementById("deliveryFee").innerText = `₹${totals.delivery.toFixed(2)}`;
          document.getElementById("totalPrice").innerText = `₹${totals.final.toFixed(2)}`;
          document.getElementById("breakdownFinal").innerText = `₹${totals.final.toFixed(2)}`;
        }

        // Cancel cart + redirect home
        function confirmCancel() {
          localStorage.removeItem("foodCart");
          setTimeout(() => {
            window.location.href = "https://localhost:7225/"; // or your actual homepage path
          }, 300);
        }

        // Initialize
        renderCart();

    </script>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>